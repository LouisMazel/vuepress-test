import{_ as y,e as g,j as o,M as h,$ as f,o as n,c as a,a as i,w as l,u as c,O as V,F as u,f as w,t as _,Q as q,i as r,d as x,b as k}from"./app.3b1d62ed.js";const C=r(`<h1 id="user-visibility" tabindex="-1"><a class="header-anchor" href="#user-visibility" aria-hidden="true">#</a> user-visibility</h1><p>Helper to see and mange the user page visibility</p><h2 id="demo" tabindex="-1"><a class="header-anchor" href="#demo" aria-hidden="true">#</a> Demo</h2><br><p><strong>options</strong>: <code>IdleTimeoutOptions</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> userVisibilyOptions<span class="token operator">:</span> UserVisibilyOptions <span class="token operator">=</span> <span class="token punctuation">{</span>
  immediate<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  once<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  timeout<span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>callback</strong>: <code>IdleTimeoutCallback</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> userVisibilyCallback<span class="token operator">:</span> <span class="token function-variable function">UserVisibilyCallback</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> isVisible <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;isVisible&#39;</span><span class="token punctuation">,</span> isVisible<span class="token punctuation">)</span>
  event<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> isVisible<span class="token operator">:</span> isVisible <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br>`,9),O=x(" Destroy "),z=k("br",null,null,-1),M=k("br",null,null,-1),U=r(`<p><strong>Switch tabs for a second to see events</strong></p><h2 id="how-to-use-it" tabindex="-1"><a class="header-anchor" href="#how-to-use-it" aria-hidden="true">#</a> How to use it ?</h2><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MazBtn</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userVisibilityInstance?.destroy<span class="token punctuation">&quot;</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>danger<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    Destroy
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MazBtn</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MazCard</span> <span class="token attr-name">overflow-hidden</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>({isVisible}, i) in events<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>i<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      isVisible: {{isVisible}}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MazCard</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span> onMounted<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">import</span> MazBtn <span class="token keyword">from</span> <span class="token string">&#39;maz-ui/components/MazBtn&#39;</span>
  <span class="token keyword">import</span> MazCard <span class="token keyword">from</span> <span class="token string">&#39;maz-ui/components/MazCard&#39;</span>

  <span class="token keyword">import</span> <span class="token punctuation">{</span> UserVisibility <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;maz-ui&#39;</span>
  <span class="token comment">// for typescript users</span>
  <span class="token keyword">import</span> type <span class="token punctuation">{</span> UserVisibilyOptions<span class="token punctuation">,</span> UserVisibilyCallback <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;maz-ui&#39;</span>

  <span class="token keyword">const</span> events <span class="token operator">=</span> ref<span class="token operator">&lt;</span><span class="token punctuation">{</span> <span class="token literal-property property">isVisible</span><span class="token operator">:</span> boolean <span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> <span class="token literal-property property">userVisibilyCallback</span><span class="token operator">:</span> <span class="token function-variable function">UserVisibilyCallback</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> isVisible <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;isVisible&#39;</span><span class="token punctuation">,</span> isVisible<span class="token punctuation">)</span>
    events<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">isVisible</span><span class="token operator">:</span> isVisible <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> <span class="token literal-property property">userVisibilyOptions</span><span class="token operator">:</span> UserVisibilyOptions <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">immediate</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">once</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> userVisibilityInstance <span class="token operator">=</span> ref<span class="token operator">&lt;</span>UserVisibility<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    userVisibilityInstance<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserVisibility</span><span class="token punctuation">(</span>userVisibilyCallback<span class="token punctuation">,</span> userVisibilyOptions<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> Options</h2><h3 id="default-options" tabindex="-1"><a class="header-anchor" href="#default-options" aria-hidden="true">#</a> Default Options</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> defaultOptions<span class="token operator">:</span> UserVisibilyOptions <span class="token operator">=</span> <span class="token punctuation">{</span>
  immediate<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  timeout<span class="token operator">:</span> <span class="token number">5000</span><span class="token punctuation">,</span>
  once<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="actions" tabindex="-1"><a class="header-anchor" href="#actions" aria-hidden="true">#</a> Actions</h3><h4 id="destroy" tabindex="-1"><a class="header-anchor" href="#destroy" aria-hidden="true">#</a> Destroy</h4><p>Will destroy the instance</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>userVisibilityInstance<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,10),B=g({name:"user-visibility.html",setup(I){const t=o([]),d=({isVisible:s})=>{console.log("isVisible",s),t.value.push({isVisible:s})},v={immediate:!0,once:!1,timeout:1e3},e=o();return h(()=>{e.value=new f(d,v)}),(s,D)=>{var p;return n(),a(u,null,[C,i(c(V),{onClick:(p=e.value)==null?void 0:p.destroy,color:"danger"},{default:l(()=>[O]),_:1},8,["onClick"]),z,M,i(c(q),{"overflow-hidden":"",style:{width:"100%"}},{default:l(()=>[(n(!0),a(u,null,w(t.value,({isVisible:b},m)=>(n(),a("div",{key:m}," isVisible: "+_(b),1))),128))]),_:1}),U],64)}}});var T=y(B,[["__file","user-visibility.html.vue"]]);export{T as default};
